return {
    rust = {
        inp = {
            '\27[?25l\27[2J\27[m\27[38;5;11m\27[1m\27[Hwarning\27[38;5;15m: unused variable: `args`\27[m\r',
            '\27[38;5;14m\27[1m\27[1C-->\27[m\27[1Ctest.rs:3:9\r',
            '\27[38;5;14m\27[1m\27[2C|\r',
            '3\27[m\27[38;5;14m\27[1m\27[1C|\27[m     let args = std::env::args();\r',
            '\27[38;5;14m\27[1m\27[2C|\27[m\27[1C\27[38;5;11m\27[1m\27[8C^^^^\27[m\27[38;5;11m\27[1m\27[1Chelp: if this is intentional, prefix it with an underscore: `_args`\27[m\r',
            '\27[38;5;14m\27[1m\27[2C|\27[m\r',
            '\27[38;5;14m\27[1m\27[2C=\27[38;5;15m\27[1Cnote\27[m: `#[warn(unused_variables)]` on by default\27[9;1H\27]0;C:\\Windows\\SYSTEM32\\cmd.exe\a\27[?25h\27[?25l\27[38;5;11m\27[1mwarning\27[38;5;15m: 1 warning emitted\27[11;1H\27[?25h',
            '\27[m',
            'Hello Rust\r',
        },
        out = {
            [[warning: unused variable: `args`]],
            [[ --> test.rs:3:9]],
            [[  |]],
            [[3 |     let args = std::env::args();]],
            [[  |         ^^^^ help: if this is intentional, prefix it with an underscore: `_args`]],
            [[  |]],
            [[  = note: `#[warn(unused_variables)]` on by default]],
            [[]],
            [[warning: 1 warning emitted]],
            [[]],
            [[Hello Rust]],
        },
    },
    vulkan = {
        inp = {
            '[vkt][E] Validation Error: [ VUID-vkCmdDrawIndexed-None-08600 ] Object 0: handle = 0xf3bb720000000146, name = GraphicsPipeline, type = VK_OBJECT_TYPE_PIP\r',
            '\27[32;153HPELINE; | MessageID = 0x381a0272 | vkCmdDrawIndexed():  The VkPipeline 0xf3bb720000000146[GraphicsPipeline] (created with VkPipelineLayout 0xf775d00000000\r',
            "\27[32;153H0144[PipelineLayout]) statically uses descriptor set (index #0) which is not compatible with the currently bound descriptor set's pipeline layout (VkPipel\r",
            '\27[32;153HlineLayout 0x0[]). The Vulkan spec states: For each set n that is statically used by a bound shader, a descriptor set must have been bound to n at the sam\r',
            '\27[32;153Hme pipeline bind point, with a VkPipelineLayout that is compatible for set n, with the VkPipelineLayout used to create the current VkPipeline or the VkDes\r',
            '\27[32;153HscriptorSetLayout array used to create the current VkShaderEXT , as described in Pipeline Layout Compatibility (https://vulkan.lunarg.com/doc/view/1.3.283\r',
            '\27[32;153H3.0/windows/1.3-extensions/vkspec.html#VUID-vkCmdDrawIndexed-None-08600)\r',
        },
        out = [[[vkt][E] Validation Error: [ VUID-vkCmdDrawIndexed-None-08600 ] Object 0: handle = 0xf3bb720000000146, name = GraphicsPipeline, type = VK_OBJECT_TYPE_PIPELINE; | MessageID = 0x381a0272 | vkCmdDrawIndexed():  The VkPipeline 0xf3bb720000000146[GraphicsPipeline] (created with VkPipelineLayout 0xf775d00000000144[PipelineLayout]) statically uses descriptor set (index #0) which is not compatible with the currently bound descriptor set's pipeline layout (VkPipelineLayout 0x0[]). The Vulkan spec states: For each set n that is statically used by a bound shader, a descriptor set must have been bound to n at the same pipeline bind point, with a VkPipelineLayout that is compatible for set n, with the VkPipelineLayout used to create the current VkPipeline or the VkDescriptorSetLayout array used to create the current VkShaderEXT , as described in Pipeline Layout Compatibility (https://vulkan.lunarg.com/doc/view/1.3.283.0/windows/1.3-extensions/vkspec.html#VUID-vkCmdDrawIndexed-None-08600)]],
    },
}
