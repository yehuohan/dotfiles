{
    "version": "0.2.0",
    "configurations": [
        {
            // Extension: C/C++
            // Windows: pacman -S --needed base-devel mingw-w64-ucrt-x86_64-toolchain
            "name": "Debug C/C++",
            "type": "cppdbg", // "cppdbg" for GDB and LLDB, "cppvsdbg" for MSVC
            "request": "launch", // "attach"
            "program": "${workspaceFolder}/install/Debug/main.exe",
            "args": ["${workspaceFolder}/assets", "${workspaceFolder}/glsl"],
            "cwd": "${workspaceFolder}",
            "environment": [], // { "name": "PATH", "value": "."}
            "externalConsole": false,
            "stopAtEntry": false,
            "linux": { "MIMode": "gdb", "miDebuggerPath": "/usr/bin/gdb" },
            "osx": { "MIMode": "lldb" },
            "windows": { "MIMode": "gdb", "miDebuggerPath": "gdb" },
            "setupCommands": [
                { "text": "-enable-pretty-printing", "ignoreFailures": true },
                { "text": "-gdb-set disassembly-flavor intel", "ignoreFailures": true }
            ],
        }, {
            // Extension: C/C++ on Windows, CodeLLDB on Linux/macOS
            // Settings: "debug.allowBreakpointsEverywhere" : true
            "name": "Debug Rust",
            "type": "cppvsdbg", // "cppdbg" for LLDB, "cppvsdbg" for MSVC
            "request": "launch", // "attach"
            "program": "${workspaceFolder}/target/debug/main.exe",
            // "program": "${workspaceFolder}/target/debug/deps/main.exe", // For dynamic libraries
            "args": [],
            "cwd": "${workspaceFolder}",
            "environment": [], // { "name": "PATH", "value": "."}
            "externalConsole": false,
            "stopAtEntry": false,
        }, {
            // Extension: Python Debugger
            "name": "Debug Python",
            "type": "debugpy",
            "request": "launch", // "attach"
            "program": "${workspaceFolder}/main.py",
            // "python": "C:/apps/miniconda3/envs/base/python", // For conda python
            "args": ["-c", "${workspaceFolder}/main.json"],
            "cwd": "${workspaceFolder}",
            "env": {}, // { "PATH": "."}
            "console": "integratedTerminal", // "internalConsole", "integratedTerminal", "externalTerminal"
        }
    ]
}
